# ‚úÖ main.py ‚Äî –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–æ –¥–ª—è –¥–µ—Ç–µ–π: —è—Ä—á–µ, –ø–æ–Ω—è—Ç–Ω–µ–µ, —Å –∏–∫–æ–Ω–∫–∞–º–∏ –∏ –≤–µ—Å–µ–ª—å–µ–º

import streamlit as st
from soup_game import SoupGame

THEMES = {
    "–ö–ª–∞—Å—Å–∏–∫–∞": {
        "background": "https://media.giphy.com/media/v1.Y2lkPTc5MGI3NjExOGM4NmMyMmJjZjM3N2VkZGVkYmMyYmQ0YWI4ZjM2YjFkZGM4Y2QzZiZjdD1n/ZybDTC3S3kAUE/giphy.gif",
        "tone": "#fffbe6"
    },
    "–¢–æ–º–∞—Ç–Ω—ã–π –∞–ø–æ–∫–∞–ª–∏–ø—Å–∏—Å": {
        "background": "https://media.giphy.com/media/fAnEC88LccN7a/giphy.gif",
        "tone": "#ffe6e6"
    },
    "–ì—Ä–∏–±–Ω–æ–π –ª–µ—Å": {
        "background": "https://media.giphy.com/media/l0HlGdELQG9UE6NfK/giphy.gif",
        "tone": "#f0fff0"
    },
    "–¢—ë–º–Ω—ã–π –±–æ—Ä—â": {
        "background": "https://media.giphy.com/media/3ohfFq2FFpE4BSPJ4s/giphy.gif",
        "tone": "#1a001a"
    }
}

st.set_page_config(page_title="ü•£ –°–£–ü–û–õ–Æ–¶–ò–Ø –¥–ª—è –¥–µ—Ç–µ–π", page_icon="üßí", layout="centered")

# üé® –°—Ç–∏–ª—å —Å –≤–µ—Å—ë–ª—ã–º —Ñ–æ–Ω–æ–º –∏ —Ü–≤–µ—Ç–∞–º–∏

def apply_custom_style():
    theme = THEMES.get(st.session_state.get("theme", "–ö–ª–∞—Å—Å–∏–∫–∞"), THEMES["–ö–ª–∞—Å—Å–∏–∫–∞"])
    background = theme["background"]
    tone = theme["tone"]
    st.markdown(f"""
        <style>
        body {{
            background-image: url('{background}');
            background-size: cover;
            background-repeat: no-repeat;
            background-position: center;
        }}
        .stApp {{
            background-color: {tone};
            padding: 2rem;
            border-radius: 25px;
        }}
        h1, h2, h3, .stMarkdown p {{
            font-family: 'Comic Sans MS', cursive;
        }}
        </style>
    """, unsafe_allow_html=True)

# üîä –ó–≤—É–∫ (–≤–µ—Å—ë–ª—ã–π –∏ –º—É–ª—å—Ç—è—à–Ω—ã–π)

def play_sound(url):
    st.markdown(f"""
        <audio autoplay>
            <source src="{url}" type="audio/mp3">
        </audio>
    """, unsafe_allow_html=True)

# üéÆ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
if "game_data" in st.session_state:
    game = SoupGame()
    game.load_state(st.session_state["game_data"])
else:
    game = SoupGame()

state = game.get_state()

if "theme" not in st.session_state:
    st.session_state.theme = "–ö–ª–∞—Å—Å–∏–∫–∞"

available_themes = [t for t in THEMES if t in state.get("unlocked_themes", ["–ö–ª–∞—Å—Å–∏–∫–∞"])]
selected_theme = st.selectbox("üåà –í—ã–±–µ—Ä–∏ —Å—Ç–∏–ª—å –∏–≥—Ä—ã:", available_themes, index=available_themes.index(st.session_state.theme))
st.session_state.theme = selected_theme

apply_custom_style()
st.session_state.game_data = game.to_dict()

# üßí –í–µ—Å—ë–ª—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫
st.title("ü•≥ –°–£–ü–û–õ–Æ–¶–ò–Ø: –î–µ—Ç—Å–∫–∞—è –≤–µ—Ä—Å–∏—è")
st.markdown("üß† –¢—ã ‚Äî —Å—É–ø! –†–∞–∑–≤–∏–≤–∞–π—Å—è, –¥—Ä—É–∂–∏ –∏ –Ω–µ –¥–∞–π —Å–µ–±—è –≤—ã–ª–∏—Ç—å –≤ —Ä–∞–∫–æ–≤–∏–Ω—É!")

if state["turn"] == 0 and not state["tech"]:
    st.markdown("""
        <div style='padding:1em; background:#fff5db; border-left: 5px solid orange; border-radius: 8px;'>
            <h4>üëã –ü—Ä–∏–≤–µ—Ç, –°—É–ø—á–∏–∫!</h4>
            <p>–¢—ã —Ç–æ–ª—å–∫–æ —Ä–æ–¥–∏–ª—Å—è –≤ –∫–∞—Å—Ç—Ä—é–ª–µ, –∏ —É —Ç–µ–±—è –º–Ω–æ–≥–æ –¥–µ–ª!</p>
            <p><b>–ó–∞–¥–∞—á–∞:</b> —Å—Ç–∞—Ç—å —Å–∞–º—ã–º —É–º–Ω—ã–º —Å—É–ø–æ–º –¥–æ —Ç–æ–≥–æ, –∫–∞–∫ –æ—Ç–∫—Ä–æ–µ—Ç—Å—è —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫!</p>
        </div>
    """, unsafe_allow_html=True)

# üî¢ –•–æ–¥—ã –∏ —Ä–µ—Å—É—Ä—Å—ã
col1, col2 = st.columns(2)
with col1:
    st.markdown(f"üïì **–•–æ–¥:** `{state['turn']}` / `{game.max_turns}`")
    st.markdown(f"‚ù§Ô∏è **–ñ–∏–∑–Ω—å —Å—É–ø–∞:** `{state['hp']}`")
with col2:
    st.markdown("üçî **–°—É–ø–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã:**")
    for k, v in state["resources"].items():
        emoji = "üçó" if k == "–±–µ–ª–∫–∏" else "ü•ì" if k == "–∂–∏—Ä—ã" else "üçû"
        st.markdown(f"- {emoji} {k}: `{v}`")

# üèÜ –ü–æ–±–µ–¥–∞ –∏ –ø–æ—Ä–∞–∂–µ–Ω–∏–µ
if state["status"] == "ascended":
    play_sound("https://cdn.pixabay.com/audio/2022/10/31/audio_8c8d2f5f20.mp3")
    st.balloons()
    st.success("üéâ –¢—ã –ø–æ–±–µ–¥–∏–ª! –°—É–ø —Å—Ç–∞–ª —É–º–Ω–µ–µ –≤—Å–µ—Ö –≤ –∫–∞—Å—Ç—Ä—é–ª–µ!")
    st.button("–ò–≥—Ä–∞—Ç—å —Å–Ω–æ–≤–∞", on_click=lambda: st.session_state.clear())
    st.stop()

if state["status"] == "flushed":
    play_sound("https://cdn.pixabay.com/audio/2023/04/28/audio_13fa01aa09.mp3")
    st.error("üí¶ –£–ø—Å! –¢–µ–±—è –≤—ã–ª–∏–ª–∏... –ü–æ–ø—Ä–æ–±—É–µ–º –µ—â—ë —Ä–∞–∑!")
    st.button("–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞", on_click=lambda: st.session_state.clear())
    st.stop()

# üé≤ –•—Ä–æ–Ω–∏–∫–∏ –∏ —Ñ—Ä–∞–∫—Ü–∏–∏
st.markdown("### üìñ –í–µ—Å—ë–ª—ã–µ –∏—Å—Ç–æ—Ä–∏–∏:")
for e in reversed(state["events_log"]):
    st.markdown(f"- {e}")

st.markdown("### üë´ –î—Ä—É–∑—å—è —Å—É–ø–∞:")
for name, value in state["factions"].items():
    face = "üòÄ" if value >= 2 else "üòê" if value >= 0 else "üò†"
    st.markdown(f"**{name}**: `{value}` {face}")

# ü§î –°—É–ø–Ω—ã–π –≤—ã–±–æ—Ä
if state.get("current_choice"):
    choice = state["current_choice"]
    st.markdown("### ‚ùì –°—É–ø–Ω—ã–π –≤–æ–ø—Ä–æ—Å!")
    st.markdown(f"**{choice['text']}**")
    col_a, col_b = st.columns(2)
    if col_a.button("üëç –î–∞!"):
        game.resolve_choice("yes")
        st.session_state.game_data = game.to_dict()
        st.rerun()
    if col_b.button("üëé –ù–µ—Ç!"):
        game.resolve_choice("no")
        st.session_state.game_data = game.to_dict()
        st.rerun()

# üî¨ –¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ (–≤–µ—Å—ë–ª—ã–µ –∏ –ø–æ–Ω—è—Ç–Ω—ã–µ)
st.markdown("### üîç –ù–æ–≤—ã–µ –ø—Ä–∏–∫–æ–ª—å–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏:")
choices = game.get_upgrade_choices()
tech_tree = game.tech_tree

if not choices:
    st.warning("–í—Å–µ –æ—Ç–∫—Ä—ã—Ç–∏—è —É–∂–µ —Å–¥–µ–ª–∞–Ω—ã. –ñ–º–∏ '–°–ª–µ–¥—É—é—â–∏–π —Ö–æ–¥'!")
    if st.button("üëâ –°–ª–µ–¥—É—é—â–∏–π —Ö–æ–¥"):
        game.next_turn()
        st.session_state.game_data = game.to_dict()
        st.rerun()
    st.stop()

for choice in choices:
    deps = tech_tree.get(choice["name"], [])
    with st.expander(f"üß™ {choice['name']}"):
        st.markdown(f"**–ß—Ç–æ —ç—Ç–æ?** {choice['desc']}")
        if deps:
            st.markdown(f"üë£ –ù—É–∂–Ω–æ —Å–Ω–∞—á–∞–ª–∞: {', '.join(deps)}")
        if st.button(f"üöÄ –û—Ç–∫—Ä—ã—Ç—å ‚Äî {choice['name']}"):
            play_sound("https://cdn.pixabay.com/audio/2022/03/15/audio_3fd16212d1.mp3")
            game.apply_upgrade(choice["name"])
            game.next_turn()
            st.session_state.game_data = game.to_dict()
            st.rerun()

# üìä –î–æ–ø. –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
st.divider()
with st.expander("üì¶ –ß—Ç–æ —É —Ç–µ–±—è –µ—Å—Ç—å:"):
    st.markdown("**üèóÔ∏è –ü–æ—Å—Ç—Ä–æ–π–∫–∏:**")
    if state["structures"]:
        for s in state["structures"]:
            st.markdown(f"- üß± {s}")
    else:
        st.markdown("_–ü–æ–∫–∞ –ø—É—Å—Ç–æ._")

    st.markdown("**üìö –û—Ç–∫—Ä—ã—Ç—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏:**")
    if state["tech"]:
        for t in state["tech"]:
            st.markdown(f"- {t}")
    else:
        st.markdown("_–¢—ã –µ—â—ë –Ω–∏—á–µ–≥–æ –Ω–µ –∏–∑–æ–±—Ä—ë–ª._")
