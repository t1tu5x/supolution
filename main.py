import streamlit as st
from soup_game import SoupGame

st.set_page_config(page_title="ü•£ Supolution", layout="centered")
st.title("ü•£ Supolution ‚Äî –≠–≤–æ–ª—é—Ü–∏—è –°—É–ø–∞")

if "game" not in st.session_state:
    st.session_state.game = SoupGame()

game = st.session_state.game

st.markdown(f"**–•–æ–¥:** {game.turn} / {game.max_turns}")
col1, col2 = st.columns(2)
with col1:
    st.subheader("–†–µ—Å—É—Ä—Å—ã")
    for k, v in game.resources.items():
        max_v = game.resource_max.get(k, 1000)
        st.text(f"{k}: {v} / {max_v}")
with col2:
    st.subheader("–§—Ä–∞–∫—Ü–∏–∏")
    for k, v in game.factions.items():
        st.text(f"{k}: {v}")

st.markdown("---")
st.subheader("–í—ã–±–æ—Ä —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏")
choices = game.get_upgrade_choices()

for tech in choices:
    st.markdown(f"### üî¨ {tech['name']}")
    st.markdown(tech["desc"])
    if tech.get("cost"):
        st.markdown("üí∞ –¶–µ–Ω–∞:")
        cost_parts = []
        for c in tech["cost"]:
            if c["type"] == "faction":
                cost_parts.append(f"{c['amount']} –∫ —Ñ—Ä–∞–∫—Ü–∏–∏ '{c['target']}'")
            else:
                cost_parts.append(f"{c['amount']} {c['type']}")
        st.markdown(", ".join(cost_parts))
    if game.can_afford(tech["name"]):
        if st.button(f"–ò–∑—É—á–∏—Ç—å: {tech['name']}"):
            game.apply_upgrade(tech["name"])
            game.check_synergies()
            st.rerun()
    else:
        st.markdown("‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ä–µ—Å—É—Ä—Å–æ–≤ –∏–ª–∏ –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏")

st.markdown("---")

if st.button("–°–ª–µ–¥—É—é—â–∏–π —Ö–æ–¥"):
    game.next_turn()
    st.rerun()

st.subheader("üïò –°–æ–±—ã—Ç–∏—è")
for e in reversed(game.events_log[-8:]):
    st.markdown(e)
