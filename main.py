# ‚úÖ main.py ‚Äî —Å –≤–∏–∑—É–∞–ª–æ–º, –∑–≤—É–∫–æ–º, —Ç–µ–º–∞–º–∏, —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π DLC

import streamlit as st
from soup_game import SoupGame

THEMES = {
    "–ö–ª–∞—Å—Å–∏–∫–∞": {
        "background": "https://media.giphy.com/media/v1.Y2lkPTc5MGI3NjExOGM4NmMyMmJjZjM3N2VkZGVkYmMyYmQ0YWI4ZjM2YjFkZGM4Y2QzZiZjdD1n/ZybDTC3S3kAUE/giphy.gif",
        "tone": "#fffbe6"
    },
    "–¢–æ–º–∞—Ç–Ω—ã–π –∞–ø–æ–∫–∞–ª–∏–ø—Å–∏—Å": {
        "background": "https://media.giphy.com/media/fAnEC88LccN7a/giphy.gif",
        "tone": "#ffe6e6"
    },
    "–ì—Ä–∏–±–Ω–æ–π –ª–µ—Å": {
        "background": "https://media.giphy.com/media/l0HlGdELQG9UE6NfK/giphy.gif",
        "tone": "#f0fff0"
    },
    "–¢—ë–º–Ω—ã–π –±–æ—Ä—â": {
        "background": "https://media.giphy.com/media/3ohfFq2FFpE4BSPJ4s/giphy.gif",
        "tone": "#1a001a"
    }
}

st.set_page_config(page_title="–°–£–ü–û–õ–Æ–¶–ò–Ø", page_icon="ü•£", layout="centered")

# üé® –ö–∞—Å—Ç–æ–º–Ω—ã–π —Ñ–æ–Ω –∏ —Ü–≤–µ—Ç

def apply_custom_style():
    theme = THEMES.get(st.session_state.get("theme", "–ö–ª–∞—Å—Å–∏–∫–∞"), THEMES["–ö–ª–∞—Å—Å–∏–∫–∞"])
    background = theme["background"]
    tone = theme["tone"]
    st.markdown(f"""
        <style>
        body {{
            background-image: url('{background}');
            background-size: cover;
            background-repeat: no-repeat;
            background-position: center;
        }}
        .stApp {{
            background-color: {tone};
            padding: 2rem;
            border-radius: 25px;
        }}
        </style>
    """, unsafe_allow_html=True)

# üîä –ó–≤—É–∫

def play_sound(url):
    st.markdown(f"""
        <audio autoplay>
            <source src="{url}" type="audio/mp3">
        </audio>
    """, unsafe_allow_html=True)

# üß† –°—Ç–µ–π—Ç –∏ –∑–∞–≥—Ä—É–∑–∫–∞
if "game_data" in st.session_state:
    game = SoupGame()
    game.load_state(st.session_state["game_data"])
else:
    game = SoupGame()

state = game.get_state()

# üé® –í—ã–±–æ—Ä —Ç–µ–º—ã
if "theme" not in st.session_state:
    st.session_state.theme = "–ö–ª–∞—Å—Å–∏–∫–∞"

available_themes = [t for t in THEMES if t in state.get("unlocked_themes", ["–ö–ª–∞—Å—Å–∏–∫–∞"])]
selected_theme = st.selectbox("üé® –¢–µ–º–∞ —Å—É–ø–∞:", available_themes, index=available_themes.index(st.session_state.theme))
st.session_state.theme = selected_theme

apply_custom_style()

st.session_state.game_data = game.to_dict()

# üß† –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∏ –∏–Ω—Ç—Ä–æ
st.title("ü•£ –°–£–ü–û–õ–Æ–¶–ò–Ø")
st.markdown("**–¢—ã ‚Äî —Å—É–ø. –†–∞–∑—É–º–Ω—ã–π. –ù–µ –¥–∞–π —Å–µ–±—è –≤—ã–ª–∏—Ç—å.**")

if state["turn"] == 0 and not state["tech"]:
    st.markdown("""
        <div style='padding:1em; background:#fff5db; border-left: 5px solid orange; border-radius: 8px;'>
            <h4>üì¢ –¢—ã ‚Äî —Å—É–ø. –ò —Ç—ã –∂–∏–≤–æ–π.</h4>
            <p>–†–∞–∑–≤–∏–≤–∞–π —Å–≤–æ—é —Å—É–ø–Ω—É—é —Ü–∏–≤–∏–ª–∏–∑–∞—Ü–∏—é, —Å—Ç—Ä–æ–π —Å–æ—é–∑—ã, –ø—Ä–∏–Ω–∏–º–∞–π —Ä–µ—à–µ–Ω–∏—è...</p>
            <p><b>–¶–µ–ª—å:</b> –¥–æ—Å—Ç–∏—á—å <i>–°—É–ø–æ–∑–Ω–∞–Ω–∏—è</i> –¥–æ —Ç–æ–≥–æ, –∫–∞–∫ —Ç–µ–±—è –≤—ã–ª—å—é—Ç –≤ —É–Ω–∏—Ç–∞–∑.</p>
        </div>
    """, unsafe_allow_html=True)

# üßæ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ —Ä–µ—Å—É—Ä—Å—ã
col1, col2 = st.columns(2)
with col1:
    st.markdown(f"üåÄ **–•–æ–¥:** `{state['turn']}` / `{game.max_turns}`")
    st.markdown(f"‚ù§Ô∏è **–ñ–∏–∑–Ω—å —Å—É–ø–∞:** `{state['hp']}`")
with col2:
    st.markdown("üì¶ **–†–µ—Å—É—Ä—Å—ã:**")
    for k, v in state["resources"].items():
        st.markdown(f"- {k}: `{v}`")

# üéâ –ü–æ–±–µ–¥–∞ / üíÄ –ü–æ—Ä–∞–∂–µ–Ω–∏–µ
if state["status"] == "ascended":
    play_sound("https://cdn.pixabay.com/audio/2022/10/31/audio_8c8d2f5f20.mp3")
    st.balloons()
    st.success("üéâ –°—É–ø —Å—Ç–∞–ª —Å–≤–µ—Ä—Ö—Å—É—â–µ—Å—Ç–≤–æ–º! –ü–æ–±–µ–¥–∞.")
    st.button("–ò–≥—Ä–∞—Ç—å —Å–Ω–æ–≤–∞", on_click=lambda: st.session_state.clear())
    st.stop()

if state["status"] == "flushed":
    play_sound("https://cdn.pixabay.com/audio/2023/04/28/audio_13fa01aa09.mp3")
    st.error("üöΩ –°—É–ø –≤—ã–ª–∏–ª–∏ –≤ —É–Ω–∏—Ç–∞–∑. –í—Å—ë –ø—Ä–æ–ø–∞–ª–æ.")
    st.button("–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞", on_click=lambda: st.session_state.clear())
    st.stop()

# üìú –•—Ä–æ–Ω–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
st.divider()
st.markdown("### üìú –°—É–ø–Ω—ã–µ —Ö—Ä–æ–Ω–∏–∫–∏:")
for e in reversed(state["events_log"]):
    st.markdown(f"- {e}")

# üèõÔ∏è –§—Ä–∞–∫—Ü–∏–∏
st.markdown("### üèõÔ∏è –§—Ä–∞–∫—Ü–∏–∏:")
for name, value in state["factions"].items():
    bar = "üü©" * max(0, value) + "üü•" * max(0, -value)
    st.markdown(f"**{name}**: `{value}` {bar}")

# üé≠ –°—é–∂–µ—Ç–Ω—ã–µ –≤—ã–±–æ—Ä—ã
if state.get("current_choice"):
    choice = state["current_choice"]
    st.markdown("### ‚öñÔ∏è –°—É–¥—å–±–æ–Ω–æ—Å–Ω—ã–π –≤—ã–±–æ—Ä!")
    st.markdown(f"**{choice['text']}**")
    col_a, col_b = st.columns(2)
    if col_a.button("‚úÖ –°–æ–≥–ª–∞—Å–µ–Ω"):
        game.resolve_choice("yes")
        st.session_state.game_data = game.to_dict()
        st.rerun()
    if col_b.button("‚ùå –û—Ç–∫–∞–∑–∞—Ç—å—Å—è"):
        game.resolve_choice("no")
        st.session_state.game_data = game.to_dict()
        st.rerun()

# üî¨ –ê–ø–≥—Ä–µ–π–¥—ã (—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏)
st.markdown("### üî¨ –ù–æ–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏:")
choices = game.get_upgrade_choices()
if not choices:
    st.warning("–í—Å–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –∏–∑—É—á–µ–Ω—ã. –ü—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏ '–°–ª–µ–¥—É—é—â–∏–π —Ö–æ–¥'.")
    if st.button("–°–ª–µ–¥—É—é—â–∏–π —Ö–æ–¥"):
        game.next_turn()
        st.session_state.game_data = game.to_dict()
        st.rerun()
    st.stop()

selected_name = st.radio("–í—ã–±–µ—Ä–∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—é:", [c["name"] for c in choices])
selected_upgrade = next(u for u in choices if u["name"] == selected_name)
st.markdown(f"üîç **–û–ø–∏—Å–∞–Ω–∏–µ:** {selected_upgrade['desc']}")

if st.button("üìà –ü—Ä–∏–º–µ–Ω–∏—Ç—å –∏ –ø–µ—Ä–µ–π—Ç–∏ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —Ö–æ–¥—É"):
    play_sound("https://cdn.pixabay.com/audio/2022/03/15/audio_3fd16212d1.mp3")
    game.apply_upgrade(selected_name)
    game.next_turn()
    st.session_state.game_data = game.to_dict()
    st.rerun()

# üìä –î–æ–ø. –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
st.divider()
with st.expander("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ü–∏–≤–∏–ª–∏–∑–∞—Ü–∏–∏"):
    st.markdown("**üß± –ü–æ—Å—Ç—Ä–æ–π–∫–∏:**")
    if state["structures"]:
        for s in state["structures"]:
            st.markdown(f"- üèóÔ∏è {s}")
    else:
        st.markdown("_–ü–æ–∫–∞ –Ω–∏—á–µ–≥–æ –Ω–µ –ø–æ—Å—Ç—Ä–æ–µ–Ω–æ._")

    st.markdown("**üìò –ò–∑—É—á–µ–Ω–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏:**")
    if state["tech"]:
        for t in state["tech"]:
            st.markdown(f"- {t}")
    else:
        st.markdown("_–°—É–ø –µ—â—ë –Ω–µ –ø–æ–∑–Ω–∞–ª –Ω–∏ –æ–¥–Ω–æ–π –∏—Å—Ç–∏–Ω—ã._")
